<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE notebook PUBLIC "-//W3C//DTD XML 1.00//EN" "xnotes.dtd">
<notebook title="sample">
  <section title="sample">
    <note><![CDATA[
			
			<div class="PubNoteAttributes"><span class="AttributeTitle">Tutorial : débuter avec Hibernate sous Eclipse</span><br>
			<a class="AttributeUrl" href="http://www.supinfo-projects.com/fr/2005/hibernate/">http://www.supi<wbr>nfo-projects.co<wbr>m/fr/2005/hiber<wbr>nate/</a></div>
			<div class="PubNoteContentArea"><blockquote class="gn_bq" style="margin-top: 0.25ex;"><h1 align="center"><img src="http://www.supinfo-projects.com/fr/2005/hibernate/hibernatelogo.jpg" height="37" width="178"></h1>
			<h1>Résumé</h1>
			Les applications d'entreprises s'orientent de plus en plus vers des architectures n-tiers. La technologie J2EE et les frameworks qui se sont créés autour offrent beaucoup d'outils pour répondre aux besoins modernes. Nous allons nous intéresser dans cet article, sous la forme d'un tutorial, au framework de mapping objet-relationnel le plus populaire pour J2EE appelé Hibernate.<br>
			<br>
			<h1>Sommaire</h1>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/introduction">Introduction</a><br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/1">1. Création de la base de données </a><br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/2">2. Installation de Hibernate Synchronizer</a><br>
			
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/3">3. Utilisation de Hibernate </a><br>
			3.1. Création et préparation du projet <br>
			3.2. Création des éléments de Hibernate <br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/4">4. Test des classes </a><br>
			4.1. Classe HibernateUtil <br>
			4.2. Classe Test <br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/conclusion">Conclusion</a></blockquote></div>

			
		]]></note>
    <note><![CDATA[
			
			<div class="PubNoteAttributes"><span class="AttributeTitle">Tutorial : débuter avec Hibernate sous Eclipse</span><br>
			<a class="AttributeUrl" href="http://www.supinfo-projects.com/fr/2005/hibernate/">http://www.supi<wbr>nfo-projects.co<wbr>m/fr/2005/hiber<wbr>nate/</a></div>
			<div class="PubNoteContentArea"><blockquote class="gn_bq" style="margin-top: 0.25ex;"><h1 align="center"><img src="http://www.supinfo-projects.com/fr/2005/hibernate/hibernatelogo.jpg" height="37" width="178"></h1>
			<h1>Résumé</h1>
			Les applications d'entreprises s'orientent de plus en plus vers des architectures n-tiers. La technologie J2EE et les frameworks qui se sont créés autour offrent beaucoup d'outils pour répondre aux besoins modernes. Nous allons nous intéresser dans cet article, sous la forme d'un tutorial, au framework de mapping objet-relationnel le plus populaire pour J2EE appelé Hibernate.<br>
			<br>
			<h1>Sommaire</h1>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/introduction">Introduction</a><br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/1">1. Création de la base de données </a><br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/2">2. Installation de Hibernate Synchronizer</a><br>
			
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/3">3. Utilisation de Hibernate </a><br>
			3.1. Création et préparation du projet <br>
			3.2. Création des éléments de Hibernate <br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/4">4. Test des classes </a><br>
			4.1. Classe HibernateUtil <br>
			4.2. Classe Test <br>
			<a href="http://www.supinfo-projects.com/fr/2005/hibernate/conclusion">Conclusion</a></blockquote></div>

			
		]]></note>
  </section>
  <section title="Laurent"></section>
</notebook>
